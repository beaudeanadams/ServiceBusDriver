@inject IInstanceHandler _instanceHandler
@inject ITopicHandler _topicHandler
@inject IQueueHandler _queueHandler
@inject ISubscriptionHandler _subscriptionHandler
@inject IMessageHandler _messageHandler
@inject ITraceLogsNotifier _traceLogsNotifier
@inject HttpClient _http
@inject MessageNotifierService _messageNotifierService
@inject PropertiesNotifierService _propertiesNotifierService
@inject IToastService _toastService
@using Microsoft.Extensions.Logging
@using ServiceBusDriver.Client.Features.Instance
@using ServiceBusDriver.Client.Features.Message
@using ServiceBusDriver.Client.Features.Queue
@using ServiceBusDriver.Client.Features.Subscription
@using ServiceBusDriver.Client.Features.Topic
@using ServiceBusDriver.Client.Services
@inject ILogger<Index> _logger

<div class="flex-grow-0 flex-shrink w-2/5 px-4 w-fixed ">
<div class="sticky top-0 w-full h-full p-4 bg-gray-100 rounded-xl">
@if (_instances == null)
{
    @if (_noInstances)
    {
        <em>No Instances Found. Add Instance or Sync Instance</em>
    }
    else
    {
        <em>Loading Connections...</em>
    }
}
else
{
    <div class="flex">
        <p class="flex flex-col flex-grow w-2/5 text-lg leading-6 font-medium text-gray-900">Connection</p>
        <span>&nbsp;</span>
        @if (_propertiesSpinner)
        {
            <div class="flex flex-col flex-grow w-2/5 items-end">
                <div class="animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-purple-500"></div>
            </div>
        }
    </div>

    <div class="flex">
        <div class="flex flex-col flex-grow w-2/5">
            <label for="instance" class="mb-2 block font-semibold text-gray-700"> Select Instance</label>
            <select id="instance" name="instance" autocomplete="instance" class="border w-full p-3"
                    @onchange="@OnInstanceValueChanged">

                @if (_instances != null)
                {
                    <option value="">Select Instance</option>
                    @foreach (var instance in _instances)
                    {
                        <option value="@instance.Id" @key="@instance">@instance.Name</option>
                    }
                }
                else
                {
                    <option value="">Loading Instance</option>
                }
            </select>
        </div>
    </div>

    <hr style="padding-bottom: 2%; margin-top: 5px;">

    <div class="flex">
        <div class="flex flex-col flex-grow w-2/5">
            <label class="mb-2 block font-semibold text-gray-700" style="font-size: 15px !important;">
                <input type="radio" checked name="featureType" class="form-checkbox rounded text-pink-500" @onchange="@(() => UpdateFeatureType(false))"/>
                Topics
            </label>

        </div>
        <span>&nbsp;</span>
        <div class="flex flex-col flex-grow w-2/5">
            <label class="mb-2 block font-semibold text-gray-700" style="font-size: 15px !important;">
                <input type="radio" name="featureType" class="form-checkbox rounded text-pink-500" @onchange="@(() => UpdateFeatureType(true))"/>
                Queues
            </label>

        </div>
    </div>

    @if (!_featureIsQueue)
    {
        <div class="flex">
            <div class="flex flex-col flex-grow w-2/5">
                <label for="topic" class="mb-2 block font-semibold text-gray-700"> Select Topic</label>
                <select id="topic" name="topic" autocomplete="topic" class="border w-full p-3" disabled="@(_topics == null)"
                        @onchange="@OnTopicsValueChanged" @key="@_topics">

                    @if (_topics != null)
                    {
                        <option value="">Select Topic</option>
                        @foreach (var topic in _topics)
                        {
                            <option value="@topic?.Name" @key="@topic">@topic?.Name</option>
                        }
                    }
                    else
                    {
                        <option value="">Select Instance First</option>
                    }
                </select>
            </div>
        </div>

        <div class="flex">
            <div class="flex flex-col flex-grow w-2/5">
                <label for="subscription" class="mb-2 block font-semibold text-gray-700"> Select Subscription</label>
                <select id="subscription" name="subscription" autocomplete="subscription" class="border w-full p-3"
                        @onchange="@OnSubscriptionValueChanged" @key="@_subscriptions" disabled="@(_topics == null || _topicNameSelectBox == null || _subscriptions == null)">

                    @if (_subscriptions != null)
                    {
                        <option value="">Select Subscription</option>
                        @foreach (var subscription in _subscriptions)
                        {
                            var subsName = $"{subscription.SubscriptionName} [{subscription.SubscriptionStats.ActiveMessageCount},{subscription.SubscriptionStats.DeadLetterMessageCount}]";

                            <option value="@subscription.SubscriptionName" @key="@subscription">@subsName</option>
                        }
                    }
                    else
                    {
                        <option value="">Select Topic First</option>
                    }
                </select>
            </div>
        </div>
    }
    else
    {
        <div class="flex">
            <div class="flex flex-col flex-grow w-2/5">
                <label for="queue" class="mb-2 block font-semibold text-gray-700"> Select Queue</label>
                <select id="queue" name="queue" autocomplete="queue" class="border w-full p-3" disabled="@(_queues == null)"
                        @onchange="@OnQueueValueChanged" @key="@_queues">

                    @if (_queues != null)
                    {
                        <option value="">Select Queue</option>
                        @foreach (var queue in _queues)
                        {
                            var queueName = $"{queue.Name} [{queue.QueueStats.ActiveMessageCount},{queue.QueueStats.DeadLetterMessageCount}]";

                            <option value="@queue?.Name" @key="@queue">@queueName</option>
                        }
                    }
                    else
                    {
                        <option value="">Select Instance First</option>
                    }
                </select>
            </div>
        </div>
    }

    @if (_subscriptionNameSelectBox != null || _queueNameSelectBox != null)
    {
        <div class="flex">
            <div class="flex flex-col flex-grow w-2/5">
                <label class="mb-2 block font-semibold text-gray-700">
                    Active Messages:
                    <span style="color: green;">@_activeMsgsText</span>
                </label>
            </div>
            <span>&nbsp;</span>
            <div class="flex flex-col flex-grow w-2/5">
                <label class="mb-2 block font-semibold text-gray-700"> Dead Letters: <span style="color: green;">@_deadLetterTxt</span></label>
            </div>
        </div>

        @if (_subscriptionDetails != null && _subscriptionDetails.Rules.Any())
        {
            var ruleTableVisible = _ruleTableVisible ? "" : "hidden";

            <span class="bg-gray-500 hover:bg-purple-600 shadow-md rounded-md text-white py-1 px-4 rounded inline-flex items-center" @onclick="ToggleRuleTable">
                @if (_ruleTableVisible)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z" clip-rule="evenodd"/>
                    </svg>
                    <span></span>
                    <span class="text-sm">Hide Rules</span>
                }
                else
                {
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z" clip-rule="evenodd"/>
                    </svg>
                    <span></span>
                    <span class="text-sm">View Rules</span>
                }
            </span>

            <table class="@($"table-fixed w-full mx-auto scroll {ruleTableVisible}")">
                <thead>
                <tr>
                    <th class="p-2 tableheader w-4/12 text-sm">Name</th>
                    <th class="p-2 tableheader w-8/12 text-sm">Rule</th>
                </tr>
                </thead>
                <tbody>

                @foreach (var rule in _subscriptionDetails.Rules)
                {
                    <tr class="hover:bg-green-100 odd:bg-purple-50">
                        <td class="p-2 truncate w-4/12 text-sm" style="word-break: break-all;">@rule.Name</td>
                        <td class="p-2 w-8/12 break-all text-sm">@rule.RuleFilter</td>

                    </tr>
                }

                </tbody>
            </table>
        }
    }
}

<br/> <br/>
@if (_subscriptionNameSelectBox != null || _queueNameSelectBox != null)
{
    <p class="text-lg leading-6 font-medium text-gray-900">Peek Messages</p>
    <hr style="padding-bottom: 2%; margin-top: 5px;">

    <div class="flex">
        <div class="flex flex-col flex-grow w-5/5">
            <label for="getActiveMessages" class="mb-2 block font-semibold text-gray-700"> Peek Active Messages</label>
            <input id="getActiveMessages" name="getActiveMessages" class="border w-full p-3" type="number" @bind-value="@_activeMsgCountInput"/>
        </div>
    </div>
    <div class="flex">
        <div class="flex flex-col flex-grow w-2/5">

            <span class="inline-flex items-center bg-red-400 hover:bg-purple-600 p-3 shadow-md rounded-md text-white recieve-and-peek-button" @onclick="@ReceiveActiveMessages">
                @if (_receiveAndDeleteActiveMessageSpinner)
                {
                    <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                }
                else
                {
                    <span>RECEIVE</span>
                }
            </span>
        </div>
        <span>&nbsp;</span>
        <div class="flex flex-col flex-grow w-2/5">
            <span class="inline-flex items-center bg-gray-500 hover:bg-purple-600 p-3 shadow-md rounded-md text-white recieve-and-peek-button" @onclick="@PeekActiveMessages">
                @if (_peekActiveMessageSpinner)
                {
                    <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                }
                else
                {
                    <span>PEEK</span>
                }
            </span>
        </div>
    </div>
    <div class="flex">
        <div class="flex flex-col flex-grow w-5/5">
            <label for="getDlMessages" class="mb-2 block font-semibold text-gray-700"> Peek Dead Letter Queue</label>
            <input id="getDlMessages" name="getDlMessages" class="border w-full p-3" type="number" placeholder="Enter number to fetch" @bind-value="@_deadLetterMsgCountInput"/>

        </div>
    </div>
    <div class="flex">
        <div class="flex flex-col flex-grow w-2/5">

            <span class="inline-flex items-center bg-red-400 hover:bg-purple-600 p-3 shadow-md rounded-md text-white recieve-and-peek-button" @onclick="@ReceiveDeadLetter">
                @if (_receiveAndDeleteDlMessageSpinner)
                {
                    <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                }
                else
                {
                    <span>RECEIVE</span>
                }
            </span>
        </div>
        <span>&nbsp;</span>
        <div class="flex flex-col flex-grow w-2/5">
            <span class="inline-flex items-center bg-gray-500 hover:bg-purple-600 p-3 shadow-md rounded-md text-white recieve-and-peek-button" @onclick="@PeekDeadLetter">
                @if (_peekDlqMessageSpinner)
                {
                    <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                }
                else
                {
                    <span>PEEK</span>
                }
            </span>
        </div>
    </div>

    <div class="flex">
        <div class="flex flex-col flex-grow w-5/5">
            <label for="getlastnmsgs" class="mb-2 block font-semibold text-gray-700"> Peek Last N Messages</label>
            <div>
                <input id="getlastnmsgs" name="getlastnmsgs" class="border w-full p-3" type="number" @bind-value="@_lastNMsgCountInput"/>
                <span class="inline-flex items-center bg-gray-500 hover:bg-purple-600 p-3 shadow-md rounded-md text-white peek-get-l" @onclick="@PeekLastNMessages">
                    @if (_peekLastNMessageSpinner)
                    {
                        <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    }
                    else
                    {
                        <span>PEEK</span>
                    }
                </span>
            </div>
        </div>
    </div>
}
<br/> <br/>
@if (_subscriptionNameSelectBox != null || _queueNameSelectBox != null)
{
    <p class="text-lg leading-6 font-medium text-gray-900">Search Conditions</p>
    <hr style="padding-bottom: 2%; margin-top: 5px;">

    <div class="flex">
        <div class="flex flex-col flex-grow w-2/5">
            <label for="activesearchtype" class="mb-2 block font-semibold text-gray-700" style="font-size: 15px !important;">
                <input type="radio" checked name="searchType" class="form-checkbox rounded text-pink-500" @onchange="@(() => UpdateSearchQueue(false))"/> Active
            </label>

        </div>
        <span>&nbsp;</span>
        <div class="flex flex-col flex-grow w-2/5">
            <label for="dlsearchtype" class="mb-2 block font-semibold text-gray-700" style="font-size: 15px !important;">
                <input type="radio" name="searchType" class="form-checkbox rounded text-pink-500" @onchange="@(() => UpdateSearchQueue(true))"/> DL Queue
            </label>

        </div>
    </div>

    <div class="flex">
        <div class="flex flex-col flex-grow w-full">
            <label for="jsonxmlpath" class="mb-2 block font-semibold text-gray-700"> JSON/XML Path</label>
            <input id="jsonxmlpath" name="jsonxmlpath" class="border w-full p-3" type="text" @bind-value="@_searchPathInput"/>
        </div>
    </div>

    <div class="flex">
        <div class="flex flex-col flex-grow w-2/5">
            <label for="searchkey" class="mb-2 block font-semibold text-gray-700"> Enter Search Key</label>
            <input id="searchkey" name="searchkey" class="border w-full p-3" type="text" @bind-value="@_searchKeyInput"/>
        </div>
        <span>&nbsp;</span>
        <div class="flex flex-col w-5/5" style="margin-top: 38px;">

            <span class="inline-flex items-center bg-gray-500 hover:bg-purple-600 p-3 shadow-md rounded-md text-white peek-get-l" @onclick="@SearchMessages">
                @if (_searchMessageSpinner)
                {
                    <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                }
                else
                {
                    <span>SEARCH</span>
                }
            </span>


        </div>
    </div>
}
</div>
</div>